apiVersion: v1
kind: ConfigMap
metadata:
  name: pulsar-oauth-config
data:
  config.json: |
    {
      "interactiveLogin": false,
      "tokenCallbacks": [
        {
          "issuerId": "default",
          "tokenExpiry": 120,
          "requestMappings": [
            {
              "requestParam": "grant_type",
              "match": "client_credentials",
              "claims": {
                "sub": "pulsar-client",
                "aud": ["pulsar"]
              }
            }
          ]
        }
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pulsar-mock-oauth2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pulsar-mock-oauth2
  template:
    metadata:
      labels:
        app: pulsar-mock-oauth2
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: pulsar-oauth-config
      containers:
      - name: oauth
        image: ghcr.io/navikt/mock-oauth2-server:3.0.0
        env:
        - name: SERVER_PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "debug"
        - name: JSON_CONFIG_PATH
          value: "/app/config.json"
        volumeMounts:
          - name: config-volume
            mountPath: /app/config.json
            readOnly: true
            subPath: config.json
        ports:
        - containerPort: 8080
        startupProbe:
          httpGet:
            path: /isalive
            port: 8080
          failureThreshold: 30
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /isalive
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  name: pulsar-mock-oauth2
spec:
  selector:
    app: pulsar-mock-oauth2
  ports:
  - port: 8080
    targetPort: 8080
