k8s_kind('Namespace')
k8s_kind('Secret')
k8s_kind('Role')
k8s_kind('RoleBinding')
k8s_kind('Resiliency')
k8s_kind('Subscription')
k8s_kind('HTTPEndpoint')
k8s_kind('Service')
k8s_kind('Configuration')
k8s_kind('Component')

load('ext://helm_resource', 'helm_resource', 'helm_repo')
load('ext://namespace', 'namespace_create', 'namespace_inject')
namespace_create('dapr-tests')
k8s_resource(workload='dapr-tests', labels=['core'], pod_readiness="ignore")

local_resource('dapr-e2e-images',
              dir='../../dapr',
              cmd='make build-push-e2e-app-all',
              env={
                'DAPR_CACHE_REGISTRY': 'dapre2eacr.azurecr.io',
                'DAPR_TEST_REGISTRY': 'localhost:5001',
                'TARGET_OS': 'linux',
                'TARGET_ARCH': 'arm64',
                'DAPR_TAG': 'dev',
              },
              labels=['core'])

local_resource('dapr-images',
              dir='../../dapr',
              cmd='mise exec dapr@1.16 -- dapr uninstall -k -n dapr-tests && make build docker-push',
              env={
                'HA_MODE': 'true',
                'DAPR_REGISTRY': 'localhost:5001/dapr',
                'DAPR_TAG': 'dev',
                'DAPR_TEST_NAMESPACE': 'dapr-tests',
                'DAPR_NAMESPACE': 'dapr-tests',
                'TARGET_OS': 'linux',
                'TARGET_ARCH': 'arm64',
                'GOOS': 'linux',
                'GOARCH': 'arm64',
                'LOG_LEVEL': 'debug'
              },
              resource_deps=['dapr-tests'],
              labels=['core'])

helm_resource('dapr', '../../dapr/charts/dapr',
             release_name='dapr',
             namespace='dapr-tests',
             flags=[
                '--set', 'global.ha.enabled=true',
                '--set', 'global.tag=dev-linux-arm64',
                '--set', 'global.registry=localhost:5001/dapr',
                '--set', 'global.logAsJson=true',
                '--set', 'global.daprControlPlaneOs=linux',
                '--set', 'global.daprControlPlaneArch=arm64',
                '--set', 'dapr_placement.logLevel=debug',
                '--set', 'dapr_sentry.logLevel=debug',
                '--set', 'dapr_sidecar_injector.sidecarImagePullPolicy=Always',
                '--set', 'global.imagePullPolicy=Always',
                '--set', 'global.imagePullSecrets=',
                '--set', 'global.mtls.enabled=true',
                '--set', 'dapr_placement.cluster.forceInMemoryLog=true',
                '--set', 'dapr_scheduler.replicaCount=1',
                '--set', 'dapr_scheduler.cluster.storageSize=100Mi',
                '--set', 'dapr_scheduler.cluster.inMemoryStorage=false',
                '--set', 'dapr_scheduler.logLevel=debug',
              ],
             resource_deps=['dapr-images'],
             labels=['core'])

local_resource('dapr-test-components',
              dir='../../dapr',
              cmd='make setup-test-components',
              env={
                'DAPR_TEST_NAMESPACE': 'dapr-tests',
                'DAPR_NAMESPACE': 'dapr-tests',
              },
              resource_deps=['dapr'],
              labels=['core'])


k8s_yaml('manifests/redis.yaml')
k8s_resource(workload='redis', labels=['core'])
k8s_resource(workload='dapr-redis', labels=['core'])

# helm_resource('zipkin', 'openzipkin/zipkin',
#              release_name='zipkin',
#              namespace='dapr-tests',
#              flags=['--set', 'zipkin.storage.type=mem'],
#              resource_deps=['openzipkin', 'dapr-tests'],
#              labels=['core'])

k8s_yaml('manifests/postgres.yaml')
k8s_resource(workload='postgres', objects=['postgres-config:ConfigMap'], labels=['core'])
k8s_resource(workload='dapr-postgres-postgresql', labels=['core'])
